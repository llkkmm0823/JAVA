package days09;

	//배열 같은 기능이 있음
	// 짱 중요함 짱짱 중요함 근데 좀 어려움
	
	//번호 	  이름		국어	영어	수학	총점	평균
	//-------------------------------------------
	//	1		홍길동		78		89		76		256	78.2  <--이 단위(행으로)로 취급하겠다 이말이여
	//	2		홍길동		68		89		76		256	78.2
	//	3		홍길동		88		89		76		256	78.2

	// 1단계 : 각 자료를 낱개로 취급
	// 2단계 : 위 표에서 자료를 열 별로 묶어서 같은 자료형끼리,
	//			  관련 자료형끼리 묶어서 취급(관련자료들을 그룹으로)
	// 3단계 : C언어의 구조체(Struct) 사용 (여러 자료형을 갖는 자료화 그룹으로 취급)
	// 4단계 : 구조체 그룹에 기능적인 면을 추가해서 그 자체만으로도 프로그램으로 사용할 수 있게 취급
	//			  자료와 메서드가 하나로
	
	// 클래스(Class)
	// 프로그램으로 처리하고자 하는 대상을 자료화하여 하나의 자료향으로 정의한 사용자 정의 자료형
	// 쉽게 말해 필요에 의해 기본자료형(int, double, char 등)외에 그들을 그룹화하여 새롭게 정의한 자료형
	// 한 개 이상의 자료, 하나이상의 자료형을 저장할 수 있는 복합 자료형
	// 활용되기 이전까지는 정의만 되어있는 클래스는 정의영역(설계도,원본)
	
	// 그동안 사용해오던 클래스 : Scanner 등
	
	//자바의 프로그램 단위는 '클래스'
	//하나의 프로그램 파일 (XXXXX.java) 안에는 여러 개의 클래스를 넣어서 사용가능
	//여러 개의 클래스 중 파일 이름과 같은 이름을 쓰는 클래스를 public으로 지정
	//클래스는 보통 ' public static void main(){} ' 이 존재
	// XXXX.java 파일 안에 XXXX이름의 클래스가 반드시 존재해야함(이름동일해야함)
	//public 이면서 main을 갖고 있는 클래스는 자료형으로서의 클래스이기 보단 '프로그램 실행단위로서의 클래스'
	//앞으로 사용하거나, import해서 사용할 클래스는 자료저장&가공용 클래스
	
	//class만드는 법 : class라는 키워드를 이용하여 생성
	
	class 클래스이름{ 
		// 인코딩방식이 다른 환경에 옮겨졌을 때 한글은 깨짐 // 그래서 대개 영문으로 작성
		//중괄호 안에 필요한 변수들을 선언하고 사용합니다.
		int 변수1;
		double 변수2;
		String 변수3;
		int [] 배열변수1 = new int[5];
		// 클래스 안에 선언한 변수는 멤버, 멤버필드, 속성, 멤버변수, 필드 등 의 이름들로 불리기도 함
		
		// 클래스 내부에는 클래스 전용으로만 사용할 수 있는 멤버 메서드 존재
		public void 메서드1() {
			
		}//멤버 메서드
		
		// 멤버 메서드는 대부분(특별한 경우를 제외) static 키워드 사용 X
		// static으로 만들어진 메서드 안에서 호출할 일이 아직은 없기 때문에 static 사용하지 않음
		public void 메서드2() {
			
		}

	}

	
	//실제 클래스 생성
	class First {
		int n1;
		int n2;
	}//First라는 이름의 자료형(클래스)이 생성되었음
		
		
public class Class01 {
	
	public static void main(String[] args) {

		// 자료형(클래스)이 생성되었다는 건 아래와 같이 그 자료형의  변수를 만들어 사용하겠다는 뜻
		First a1;  // 생성된 변수는 레퍼런스(참조)변수
		
		// 배열 때와 마찬가지로, new 명령을 이용하여 Heap영역에 적정공간(클래스가 정의된 크기만큼)을 확보 후 그 주소를 a1변수에 저장하여 사용
		a1 = new First(); // new First[] X    []는 배열 생성 때만 사용
		// 레퍼런스 변수와 new에 의해 만들어진 공간이 합해지면 <객체>
		// 공간이 할당되면 이제부터 n1, n2변수가 a1이라는 이름과 함께 사용이 가능
		First a2 = new First();
		//객체가 두 개가 만들어졌다면 각각의 객체에 n1, n2가 존재하는 셈
		
		// a1에 있는 n1 n2와 a2에 있는 n1 n2를 구분하기 위해 참조 변수 이름을 앞에 붙여서 사용
		// a1.n1   a1.n2   a2.n1   a2.n2
		
		System.out.println(a1.n1); // new로 만들어진 공간은 0이나 null로 채워짐
		System.out.println(a1.n2);
		a2.n1 = 30; // 그 공간을 다른 값으로 바꿔주면 그 값으로 변경됨
		a2.n2 = 40;
		System.out.println(a2.n1); // 변경된 값이 출력
		System.out.println(a2.n2);

		
		
		
	}

}
		
		
		
		
		
